C:KCTL:[man:sub: 55]:[42m[37msubprocess.call: "helm install --dry-run --debug /Users/cole/Desktop/koursaros/gnes/pipelines/fact_checking/index/helm"[0m
[debug] Created tunnel using local port: '62330'

[debug] SERVER: "127.0.0.1:62330"

[debug] Original chart version: ""
[debug] CHART PATH: /Users/cole/Desktop/koursaros/gnes/pipelines/fact_checking/index/helm

Error: YAML parse error on gnes/templates/main.yaml: error unmarshaling JSON: while decoding JSON: json: cannot unmarshal string into Go struct field SimpleHead.metadata of type struct { Name string "json:\"name\""; Annotations map[string]string "json:\"annotations\"" }

---
# Source: gnes/templates/main.yaml


---
apiVersion: apps/v1
kind: StatefulSet
metadata: sent_split-statefulset
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sent_split
  volumeClaimTemplates:
    accessModes: 'ReadWriteOnce'
    resources:
      requests:
        storage: 
  template:
    spec:
      containers:
        - name: sent_split
          image: gnes-preprocessor:sent_split
          args: preprocess --port_in 65351 --port_out 57072 --socket_in PULL_CONNECT --socket_out PUB_BIND --port_ctrl 53518 --parallel_backend process --yaml_path services/preprocessors/sent_split/json_mode.yml
          imagePullPolicy: null
          ports:
            - name: in
              containerPort: 65351
              protocol: TCP
            - name: out
              containerPort: 57072
              protocol: TCP
          resources:
            requests:
              cpu: 
              memory: 
---
apiVersion: v1
kind: Service
metadata:
  name: sent_split-service
spec:
  selector:
    app: sent_split
  clusterIP: None
  ports:
    - name: in
      port: 65351
      protocol: TCP
    - name: out
      port: 57072
      protocol: TCP


---
apiVersion: apps/v1
kind: StatefulSet
metadata: text_byte-statefulset
spec:
  replicas: 2
  selector:
    matchLabels:
      app: text_byte
  volumeClaimTemplates:
    accessModes: 'ReadWriteOnce'
    resources:
      requests:
        storage: 
  template:
    spec:
      containers:
        - name: text_byte
          image: gnes-encoder:text_byte
          args: encode --port_in 57072 --port_out 61543 --socket_in SUB_CONNECT --port_ctrl 55477 --parallel_backend process --yaml_path services/encoders/text_byte/max_256.yml
          imagePullPolicy: null
          ports:
            - name: in
              containerPort: 57072
              protocol: TCP
            - name: out
              containerPort: 61543
              protocol: TCP
          resources:
            requests:
              cpu: 
              memory: 
---
apiVersion: v1
kind: Service
metadata:
  name: text_byte-service
spec:
  selector:
    app: text_byte
  clusterIP: None
  ports:
    - name: in
      port: 57072
      protocol: TCP
    - name: out
      port: 61543
      protocol: TCP


---
apiVersion: apps/v1
kind: StatefulSet
metadata: keyword-statefulset
spec:
  replicas: 2
  selector:
    matchLabels:
      app: keyword
  volumeClaimTemplates:
    accessModes: 'ReadWriteOnce'
    resources:
      requests:
        storage: 
  template:
    spec:
      containers:
        - name: keyword
          image: gnes-indexer:keyword
          args: index --port_in 61543 --port_out 61586 --socket_in PULL_CONNECT --socket_out PUSH_CONNECT --port_ctrl 56793 --parallel_backend process --yaml_path services/indexers/keyword/base.yml
          imagePullPolicy: null
          ports:
            - name: in
              containerPort: 61543
              protocol: TCP
            - name: out
              containerPort: 61586
              protocol: TCP
          resources:
            requests:
              cpu: 
              memory: 
---
apiVersion: v1
kind: Service
metadata:
  name: keyword-service
spec:
  selector:
    app: keyword
  clusterIP: None
  ports:
    - name: in
      port: 61543
      protocol: TCP
    - name: out
      port: 61586
      protocol: TCP

---
apiVersion: apps/v1
kind: StatefulSet
metadata: lvdb-statefulset
spec:
  replicas: 2
  selector:
    matchLabels:
      app: lvdb
  volumeClaimTemplates:
    accessModes: 'ReadWriteOnce'
    resources:
      requests:
        storage: 
  template:
    spec:
      containers:
        - name: lvdb
          image: gnes-indexer:lvdb
          args: index --port_in 57072 --port_out 61586 --socket_in SUB_CONNECT --socket_out PUSH_CONNECT --port_ctrl 62869 --parallel_backend process --yaml_path services/indexers/lvdb/base.yml
          imagePullPolicy: null
          ports:
            - name: in
              containerPort: 57072
              protocol: TCP
            - name: out
              containerPort: 61586
              protocol: TCP
          resources:
            requests:
              cpu: 
              memory: 
---
apiVersion: v1
kind: Service
metadata:
  name: lvdb-service
spec:
  selector:
    app: lvdb
  clusterIP: None
  ports:
    - name: in
      port: 57072
      protocol: TCP
    - name: out
      port: 61586
      protocol: TCP


---
apiVersion: apps/v1
kind: StatefulSet
metadata: reduce-statefulset
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reduce
  volumeClaimTemplates:
    accessModes: 'ReadWriteOnce'
    resources:
      requests:
        storage: 
  template:
    spec:
      containers:
        - name: reduce
          image: gnes-router:reduce
          args: route --port_in 61586 --port_out 58620 --socket_out PUSH_CONNECT --port_ctrl 58308 --parallel_backend process --yaml_path BaseReduceRouter --num_part 2
          imagePullPolicy: null
          ports:
            - name: in
              containerPort: 61586
              protocol: TCP
            - name: out
              containerPort: 58620
              protocol: TCP
          resources:
            requests:
              cpu: 
              memory: 
---
apiVersion: v1
kind: Service
metadata:
  name: reduce-service
spec:
  selector:
    app: reduce
  clusterIP: None
  ports:
    - name: in
      port: 61586
      protocol: TCP
    - name: out
      port: 58620
      protocol: TCP



